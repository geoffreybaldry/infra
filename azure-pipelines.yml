trigger:
  branches:
    include:
      #- main
      - next
  #paths: # Commented out while the majority of the work is updating the pipeline
  #  include:
  #    - *.tf

#pr:
#  branches:
#    include:
#      - main
#      - next
  #paths:
  #  include:
  #    - *.tf

pool:
  name: Azure Pipelines

resources:
  repositories:
    - repository: build_templates
      type: github
      name: geoffreybaldry/build_templates
      endpoint: geoffreybaldry # The name of the github service connection
      #ref: refs/heads/next

variables:
- group: "terraform-pipeline-vg"
- name: terraform.version
  value: "latest"
  readonly: true

stages:
  - stage: build
    jobs:
      - job: terraform_validate
        steps:
          - template: init.yml@build_templates
            parameters:
              version: $(terraform.version)
          
          - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV2@2
            displayName: 'Terraform: validate'
            inputs:
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              provider: aws
              command: validate
              backendServiceAWS: 'AWS for Terraform Service Connection'

      - job: terraform_plan
        dependsOn: terraform_validate
        steps:
          - template: init.yml@build_templates
            parameters:
              version: $(terraform.version)

          - task: Bash@3
            #name: "terraform plan"
            displayName: "Terraform: plan"
            env:
              AWS_ACCESS_KEY: $(aws_access_key)
              AWS_SECRET_KEY: $(aws_secret_key)
            inputs:
              targetType: "inline"
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              script: |
                set -euo pipefail

                terraform plan \
                  -input=false \
                  -out=${BUILD_BUILDNUMBER}.tfplan 

          - template: publish_plan.yml@build_templates      

  - stage: deploy
    jobs:
      - deployment: terraform
        condition: succeeded()
        displayName: "Terraform: Deploy"
        environment: "dev"
        strategy:
          runOnce:
            deploy:
              steps:
                - template: init.yml@build_templates
                  parameters:
                    version: $(terraform.version)

                - template: extract_plan.yml@build_templates
                
                - task: Bash@3
                  displayName: "Terraform Apply"
                  env:
                    AWS_ACCESS_KEY: $(aws_access_key)
                    AWS_SECRET_KEY: $(aws_secret_key)
                  inputs:
                    targetType: "inline"
                    workingDirectory: $(System.DefaultWorkingDirectory)
                    script: |
                      set -euo pipefail

                      terraform apply \
                        -input=false \
                        ${BUILD_BUILDNUMBER}.tfplan 



